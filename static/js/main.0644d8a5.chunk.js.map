{"version":3,"sources":["components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","api/api.js","App.jsx","index.js"],"names":["TodoList","state","query","todoStatus","handleChange","event","target","name","value","setState","activities","this","filter","activity","completed","title","toLowerCase","includes","props","todos","showUserInfo","filteredTodos","filterTodos","className","type","id","placeholder","onChange","map","todo","key","readOnly","onClick","userId","checked","React","Component","defaultProps","CurrentUser","user","clearSelectedUser","email","phone","BASE_URL","request","url","options","fetch","then","result","ok","Error","status","statusText","json","data","App","users","selectedUserId","a","todosFromServer","usersFromServer","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0644d8a5.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\n\nexport class TodoList extends React.Component {\n  state = {\n    query: '',\n    todoStatus: '',\n  }\n\n  handleChange = (event) => {\n    const {\n      name, value,\n    } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  filterTodos(activities) {\n    const { query, todoStatus } = this.state;\n\n    switch (todoStatus) {\n      case 'completed':\n        return activities.filter(activity => activity.completed);\n      case 'active':\n        return activities.filter(activity => !activity.completed);\n      default:\n        return activities.filter(activity => (\n          activity.title.toLowerCase().includes(query.toLowerCase())\n        ));\n    }\n  }\n\n  render() {\n    const { todos, showUserInfo } = this.props;\n    const { query, todoStatus } = this.state;\n\n    const filteredTodos = this.filterTodos(todos);\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <input\n          type=\"text\"\n          id=\"search-query\"\n          className=\"input\"\n          placeholder=\"Type todo title\"\n          name=\"query\"\n          value={query}\n          onChange={this.handleChange}\n        />\n        {' '}\n        <select\n          name=\"todoStatus\"\n          value={todoStatus}\n          onChange={this.handleChange}\n        >\n          <option value=\"\">\n            Choose a status\n          </option>\n          <option value=\"all\">\n            All\n          </option>\n          <option value=\"active\">\n            Active\n          </option>\n          <option value=\"completed\">\n            Completed\n          </option>\n        </select>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {filteredTodos.map(todo => (\n              todo.completed ? (\n                <li\n                  key={todo.id}\n                  className=\"TodoList__item TodoList__item--unchecked\"\n                >\n                  <label>\n                    <input type=\"checkbox\" readOnly />\n                    <p>{todo.title}</p>\n                  </label>\n\n                  <button\n                    className=\"\n                      TodoList__user-button\n                      TodoList__user-button--selected\n                      button\n                    \"\n                    type=\"button\"\n                    onClick={() => showUserInfo(todo.userId)}\n                  >\n                    User&nbsp;#\n                    {todo.userId}\n                  </button>\n                </li>\n              ) : (\n                <li\n                  key={todo.id}\n                  className=\"TodoList__item TodoList__item--checked\"\n                >\n                  <label>\n                    <input type=\"checkbox\" checked readOnly />\n                    <p>{todo.title}</p>\n                  </label>\n\n                  <button\n                    className=\"\n                      TodoList__user-button\n                      button\n                    \"\n                    onClick={() => showUserInfo(todo.userId)}\n                    type=\"button\"\n                  >\n                    User&nbsp;#\n                    {todo.userId}\n                  </button>\n                </li>\n              )\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  }),\n  showUserInfo: PropTypes.func.isRequired,\n};\n\nTodoList.defaultProps = {\n  todos: 'no todo yet',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\n\nexport const CurrentUser = ({ user, clearSelectedUser }) => (\n  <div className=\"CurrentUser\">\n    <h2 className=\"CurrentUser__title\">\n      <span>\n        {`Selected user: ${user.id}`}\n      </span>\n    </h2>\n\n    <h3 className=\"CurrentUser__name\">{user.name}</h3>\n    <p className=\"CurrentUser__email\">{user.email}</p>\n    <p className=\"CurrentUser__phone\">{user.phone}</p>\n    <button\n      className=\"CurrentUser__clear\"\n      type=\"button\"\n      onClick={clearSelectedUser}\n    >\n      Clear\n    </button>\n  </div>\n);\n\nCurrentUser.propTypes = {\n  user: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }),\n  clearSelectedUser: PropTypes.func.isRequired,\n};\n\nCurrentUser.defaultProps = {\n  user: 'none',\n};\n","const BASE_URL = `https://mate-api.herokuapp.com`;\n\nfunction request(url, options) {\n  return fetch(url, options)\n    .then((result) => {\n      if (!result.ok) {\n        throw new Error(`${result.status} - ${result.statusText}`);\n      }\n\n      return result.json();\n    })\n    .then(result => result.data);\n}\n\nexport function getTodos() {\n  return request(`${BASE_URL}/todos`);\n}\n\nexport function getUser() {\n  return request(`${BASE_URL}/users`);\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos, getUser } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    users: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const todosFromServer = await getTodos();\n    const usersFromServer = await getUser();\n\n    this.setState({\n      todos: todosFromServer.filter(todo => (\n        todo.id && todo.title && todo.userId\n      )),\n      users: usersFromServer,\n    });\n  }\n\n  showUserInfo = (userId) => {\n    this.setState({\n      selectedUserId: userId,\n    });\n  }\n\n  clearSelectedUser = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  }\n\n  render() {\n    const { todos, users, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            showUserInfo={this.showUserInfo}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                user={users.find(user => user.id === selectedUserId)}\n                clearSelectedUser={this.clearSelectedUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}