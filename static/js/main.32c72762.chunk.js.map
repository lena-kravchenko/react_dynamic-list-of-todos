{"version":3,"sources":["components/FormToFilterTodos/FormToFilterTodos.jsx","components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","api/api.js","App.jsx","index.js"],"names":["FormToFilterTodos","state","query","todoStatus","handleSearch","event","target","name","value","todos","props","setState","acts","filter","todo","title","includes","toLowerCase","activity","completed","getFilteredTodos","this","className","type","id","placeholder","onChange","React","Component","TodoList","filteredTodos","activities","showUserInfo","map","key","readOnly","checked","onClick","userId","defaultProps","CurrentUser","user","clearSelectedUser","email","phone","BASE_URL","request","url","options","fetch","then","result","ok","Error","status","statusText","json","data","App","users","selectedUserId","a","todosFromServer","usersFromServer","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.32c72762.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class FormToFilterTodos extends React.Component {\n  state = {\n    query: '',\n    todoStatus: '',\n  }\n\n  handleSearch = (event) => {\n    const { name, value } = event.target;\n    const { todos } = this.props;\n    const { query } = this.state;\n\n    this.setState({\n      [name]: value,\n    });\n\n    let acts = todos.filter(todo => (todo.title.includes(query.toLowerCase())));\n\n    switch (value) {\n      case 'completed':\n        acts = acts.filter(activity => activity.completed);\n\n        break;\n      case 'active':\n        acts = acts.filter(activity => !activity.completed);\n\n        break;\n      default:\n      case 'all':\n\n        break;\n    }\n\n    this.props.getFilteredTodos(acts);\n  }\n\n  render() {\n    const { query, todoStatus } = this.state;\n\n    return (\n      <form className=\"form\">\n        <input\n          type=\"text\"\n          id=\"search-query\"\n          className=\"input\"\n          placeholder=\"Type todo title\"\n          name=\"query\"\n          value={query}\n          onChange={this.handleSearch}\n        />\n        {' '}\n        <select\n          name=\"todoStatus\"\n          value={todoStatus}\n          onChange={this.handleSearch}\n        >\n          <option value=\"\">\n            Choose a status to see todos\n          </option>\n          <option value=\"all\">\n            All\n          </option>\n          <option value=\"active\">\n            Active\n          </option>\n          <option value=\"completed\">\n            Completed\n          </option>\n        </select>\n      </form>\n    );\n  }\n}\n\nFormToFilterTodos.propTypes = {\n  todos: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  getFilteredTodos: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FormToFilterTodos } from '../FormToFilterTodos/FormToFilterTodos';\n\nimport './TodoList.scss';\n\nexport class TodoList extends React.Component {\n  state = {\n    filteredTodos: this.props.todos,\n  }\n\n  getFilteredTodos = (activities) => {\n    this.setState({\n      filteredTodos: activities,\n    });\n  }\n\n  render() {\n    const { showUserInfo } = this.props;\n    const { filteredTodos } = this.state;\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <FormToFilterTodos\n          todos={this.props.todos}\n          getFilteredTodos={this.getFilteredTodos}\n        />\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {filteredTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={`TodoList__item\n                  ${todo.completed\n                  ? 'TodoList__item--unchecked'\n                  : 'TodoList__item--checked'}`}\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    readOnly\n                    checked={todo.completed}\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className={`TodoList__user-button button\n                    ${todo.completed\n                    ? 'TodoList__user-button--selected'\n                    : ''}`}\n                  type=\"button\"\n                  onClick={() => showUserInfo(todo.userId)}\n                >\n                  User&nbsp;#\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  }),\n  showUserInfo: PropTypes.func.isRequired,\n};\n\nTodoList.defaultProps = {\n  todos: 'no todo yet',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\n\nexport const CurrentUser = ({ user, clearSelectedUser }) => (\n  <div className=\"CurrentUser\">\n    <h2 className=\"CurrentUser__title\">\n      <span>\n        {`Selected user: ${user.id}`}\n      </span>\n    </h2>\n\n    <h3 className=\"CurrentUser__name\">{user.name}</h3>\n    <p className=\"CurrentUser__email\">{user.email}</p>\n    <p className=\"CurrentUser__phone\">{user.phone}</p>\n    <button\n      className=\"CurrentUser__clear\"\n      type=\"button\"\n      onClick={clearSelectedUser}\n    >\n      Clear\n    </button>\n  </div>\n);\n\nCurrentUser.propTypes = {\n  user: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }),\n  clearSelectedUser: PropTypes.func.isRequired,\n};\n\nCurrentUser.defaultProps = {\n  user: 'none',\n};\n","const BASE_URL = `https://mate-api.herokuapp.com`;\n\nfunction request(url, options) {\n  return fetch(url, options)\n    .then((result) => {\n      if (!result.ok) {\n        throw new Error(`${result.status} - ${result.statusText}`);\n      }\n\n      return result.json();\n    })\n    .then(result => result.data);\n}\n\nexport function getTodos() {\n  return request(`${BASE_URL}/todos`)\n    .then(todos => todos.filter(todo => (\n      todo.id && todo.title && todo.userId\n    )));\n}\n\nexport function getUser() {\n  return request(`${BASE_URL}/users`);\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos, getUser } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    users: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const todosFromServer = await getTodos();\n    const usersFromServer = await getUser();\n\n    this.setState({\n      todos: todosFromServer,\n      users: usersFromServer,\n    });\n  }\n\n  showUserInfo = (userId) => {\n    this.setState({\n      selectedUserId: userId,\n    });\n  }\n\n  clearSelectedUser = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  }\n\n  render() {\n    const { todos, users, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            showUserInfo={this.showUserInfo}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                user={users.find(user => user.id === selectedUserId)}\n                clearSelectedUser={this.clearSelectedUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}